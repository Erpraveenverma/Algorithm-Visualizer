[{"F:\\web\\react\\sortingvisualiser\\src\\index.js":"1","F:\\web\\react\\sortingvisualiser\\src\\App.js":"2","F:\\web\\react\\sortingvisualiser\\src\\Datacircle.jsx":"3","F:\\web\\react\\sortingvisualiser\\src\\Pausebtn.jsx":"4","F:\\web\\react\\sortingvisualiser\\src\\Navlistarray.jsx":"5","F:\\web\\react\\sortingvisualiser\\src\\Navlist.jsx":"6","F:\\web\\react\\sortingvisualiser\\src\\Navbar.jsx":"7","F:\\web\\react\\sortingvisualiser\\src\\Bubblesort.jsx":"8","F:\\web\\react\\sortingvisualiser\\src\\Selectionsort.jsx":"9","F:\\web\\react\\sortingvisualiser\\src\\Mergesort.jsx":"10","F:\\web\\react\\sortingvisualiser\\src\\Insertionsort.jsx":"11","F:\\web\\react\\sortingvisualiser\\src\\Home.jsx":"12","F:\\web\\react\\sortingvisualiser\\src\\Footer.jsx":"13","F:\\web\\react\\sortingvisualiser\\src\\About.jsx":"14","F:\\web\\react\\sortingvisualiser\\src\\Contact.jsx":"15"},{"size":237,"mtime":1625635611159,"results":"16","hashOfConfig":"17"},{"size":948,"mtime":1630143766448,"results":"18","hashOfConfig":"17"},{"size":264,"mtime":1621671573165,"results":"19","hashOfConfig":"17"},{"size":217,"mtime":1625639168028,"results":"20","hashOfConfig":"17"},{"size":647,"mtime":1630139317110,"results":"21","hashOfConfig":"17"},{"size":1740,"mtime":1630126067608,"results":"22","hashOfConfig":"17"},{"size":832,"mtime":1630667246603,"results":"23","hashOfConfig":"17"},{"size":13443,"mtime":1630669264094,"results":"24","hashOfConfig":"17"},{"size":16353,"mtime":1630121936168,"results":"25","hashOfConfig":"17"},{"size":18655,"mtime":1630121990226,"results":"26","hashOfConfig":"17"},{"size":14031,"mtime":1630121872073,"results":"27","hashOfConfig":"17"},{"size":2386,"mtime":1630238705579,"results":"28","hashOfConfig":"17"},{"size":3827,"mtime":1630141906519,"results":"29","hashOfConfig":"17"},{"size":2860,"mtime":1630487196936,"results":"30","hashOfConfig":"17"},{"size":969,"mtime":1630144115922,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b002nb",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\web\\react\\sortingvisualiser\\src\\index.js",[],"F:\\web\\react\\sortingvisualiser\\src\\App.js",[],"F:\\web\\react\\sortingvisualiser\\src\\Datacircle.jsx",[],"F:\\web\\react\\sortingvisualiser\\src\\Pausebtn.jsx",[],["70","71"],"F:\\web\\react\\sortingvisualiser\\src\\Navlistarray.jsx",[],"F:\\web\\react\\sortingvisualiser\\src\\Navlist.jsx",[],"F:\\web\\react\\sortingvisualiser\\src\\Navbar.jsx",[],"F:\\web\\react\\sortingvisualiser\\src\\Bubblesort.jsx",["72","73","74","75"],"import { array } from 'prop-types';\r\nimport React, {useState,useRef } from 'react';\r\nimport './index.css'\r\n\r\n\r\nfunction Bubblesort(){\r\n    var [time,settime]=useState(1000);\r\n    var [state,setstate]=useState('Unset');\r\n    var inputRef=array;\r\n    inputRef[0] = useRef()\r\n    inputRef[1] = useRef()\r\n    inputRef[2] = useRef()\r\n    inputRef[3] = useRef()\r\n    inputRef[4] = useRef()\r\n    inputRef[5] = useRef()\r\n    var [Darray,setArray]=useState([{\r\n        id:0,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:1,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:2,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:3,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:4,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:5,\r\n        data:0,\r\n        bgclr:'white',\r\n    }]);\r\n\r\n    function setval(id,val,clr){\r\n        setArray((preValue)=>{\r\n            if(id===0){\r\n            return [\r\n                    {data:val,bgclr:clr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===1){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:val,bgclr:clr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===2){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:val,bgclr:clr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===3){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:val,bgclr:clr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n\r\n            }\r\n            else if(id===4){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:val,bgclr:clr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===5){\r\n            return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:val,bgclr:clr,id:preValue[5].id}\r\n                ]\r\n            }\r\n        })\r\n    }\r\n    function sleep(ms){\r\n        return new Promise(resolve=>setTimeout(resolve,ms));\r\n    }    \r\n    return(\r\n        <div>\r\n            <div className='container'>\r\n                <div><p className='text-secondary' style={{float:'left'}}>{state}</p><h1 style={{float:'inherit',textAlign:'center'}} className=''>BUBBLE SORT<small className='font-weight-normal font-size-small' style={{float:'right',fontSize:\"16px\",fontWeight:'normal'}}>\r\n                    Speed: <select id=\"std\" onChange={(event)=>\r\n                {   var x=document.getElementById('std').value;\r\n                    settime(x);\r\n                    }}>\r\n\r\n<option id=\"ov3\"  value=\"1000\">Fast</option>\r\n\r\n<option id=\"ov5\"  value=\"2000\">Normal</option>\r\n<option  id=\"ov6\" value=\"4000\">Slow</option>\r\n</select></small></h1></div>\r\n                \r\n            </div>\r\n            <br/><br/><br/><br/>\r\n            <div className='container'>\r\n                <div className='grid'>\r\n                    <div className=\"row\">\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                        {Darray.map((value,index)=>{\r\n                            return (<div key={value.id} className='col'>\r\n                            <h1 className='rounded-circle text-center border border-secondary' \r\n                            ref={inputRef[value.id]}\r\n                            style={{backgroundColor:value.bgclr,position:'relative',width:'75px'}}>{value.data}</h1>\r\n                            </div>);})\r\n                        }\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                    </div><br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\"></div>\r\n                        {/* <Resetbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='reset' disabled={false} className='btn btn-outline-secondary' onClick={async()=>{\r\n                            setstate('Setting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[];\r\n                            var i=0;\r\n                            var id=setInterval(func,150);\r\n                            function func(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                da[i]=(Math.floor((Math.random()*100)+1));\r\n                                setval(i,da[i],\"lightgrey\");\r\n                                i++;\r\n                            }\r\n                            setstate('Ready');\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }>reset</button>\r\n                    </div>\r\n                        {/* <Startbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='start' className='btn btn-outline-primary' onClick={async()=>{\r\n                            setstate('Sorting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[Darray[0].data,Darray[1].data,Darray[2].data,Darray[3].data,Darray[4].data,Darray[5].data];\r\n                            var i=0;\r\n                            var id=setInterval(func1,150);\r\n                            function func1(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                setval(i,da[i],\"lightblue\");\r\n                                i++;\r\n                                return\r\n                            }\r\n                            var k=0;\r\n                            while(k<da.length){\r\n                                let temp=0;\r\n                                var j=1;\r\n                                while(j<da.length-k){\r\n                                    await sleep(time);\r\n                                    await sleep(time);\r\n                                    setTimeout(func0(),time);\r\n                                        function func0(){\r\n                                            setval(j-1,da[j-1],\"royalblue\");\r\n                                            return\r\n                                        }\r\n                                    setTimeout(func01(),time);\r\n                                        function func01(){\r\n                                                setval(j,da[j],\"royalblue\");\r\n                                                return        \r\n                                        }\r\n                                    if(da[j-1]>da[j]) {\r\n                                        temp=da[j-1];\r\n                                        setTimeout(func2(),time);\r\n                                        function func2(){\r\n                                            \r\n                                            setval(j-1,da[j-1],\"Coral\");\r\n                                            \r\n                                            da[j-1]=da[j];\r\n                                            \r\n                                            return\r\n                                        }\r\n                                        inputRef[j-1].current.animate([\r\n                                            {transform:'translateX(0px)'},\r\n                                            {transform:'translateX(+120px) rotate(360deg)'}\r\n                                        ],\r\n                                        {duration:1000\r\n                                        });\r\n                                        setTimeout(func3(),time);\r\n                                        function func3(){\r\n                                                \r\n                                                setval(j,da[j],\"Coral\");\r\n                                                da[j]=temp;\r\n                                                \r\n                                                \r\n                                                return  \r\n                                        }\r\n                                        inputRef[j].current.animate([\r\n                                            {transform:'translateX(0px)'},\r\n                                            {transform:'translateY(-80px)'},\r\n                                            {transform:'translateX(-120px) rotate(360deg)'}\r\n                                        ],\r\n                                        {duration:1000\r\n                                        });\r\n                                        \r\n                                    }\r\n                                    setTimeout(setval,1000,j-1,da[j-1],\"lightblue\");\r\n                                    setTimeout(setval,1000,j,da[j],\"lightgreen\");\r\n                                        \r\n                                    j++;\r\n                                    \r\n                                }\r\n                                k++;\r\n                            }\r\n                            setTimeout(setval,1000,0,da[0],\"lightgreen\");\r\n                            setstate('Sorted!!')\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }    \r\n                    >start</button>\r\n                    </div>\r\n                        {/* <Reloadbtn/> */}\r\n                        <div className=\"col-4\">\r\n                        <button id='reload' className='btn btn-outline-warning' onClick={()=>{\r\n                            window.location.reload();\r\n                            }}>reload</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Bubblesort; ","F:\\web\\react\\sortingvisualiser\\src\\Selectionsort.jsx",["76","77","78","79","80","81","82","83","84","85","86"],"import { array } from 'prop-types';\r\nimport React, {useState,useRef } from 'react';\r\nimport './index.css'\r\n\r\n\r\nfunction Selectionsort(){\r\n    var [time,settime]=useState(1000);\r\n    var [state,setstate]=useState('Unset');\r\n    var inputRef=array;\r\n    inputRef[0] = useRef()\r\n    inputRef[1] = useRef()\r\n    inputRef[2] = useRef()\r\n    inputRef[3] = useRef()\r\n    inputRef[4] = useRef()\r\n    inputRef[5] = useRef()\r\n    var [Darray,setArray]=useState([{\r\n        id:0,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:1,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:2,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:3,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:4,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:5,\r\n        data:0,\r\n        bgclr:'white',\r\n    }]);\r\n\r\n    \r\n    function setval(id,val,clr){\r\n        setArray((preValue)=>{\r\n            if(id===0){\r\n            return [\r\n                    {data:val,bgclr:clr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===1){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:val,bgclr:clr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===2){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:val,bgclr:clr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===3){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:val,bgclr:clr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n\r\n            }\r\n            else if(id===4){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:val,bgclr:clr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===5){\r\n            return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:val,bgclr:clr,id:preValue[5].id}\r\n                ]\r\n            }\r\n        })\r\n    }\r\n    function sleep(ms){\r\n        return new Promise(resolve=>setTimeout(resolve,ms));\r\n    }    \r\n    return(\r\n        <div>\r\n            <div className='container'>\r\n                <div>\r\n                    <p className='text-secondary' style={{float:'left'}}>{state}</p>\r\n                    <h1 style={{float:'inherit',textAlign:'center'}} className=''>SELECTION SORT<small className='font-weight-normal font-size-small' style={{float:'right',fontSize:\"16px\",fontWeight:'normal'}}>\r\n                    Speed: <select id=\"std\" onChange={(event)=>\r\n                {   var x=document.getElementById('std').value;\r\n                    settime(x);\r\n                    }}>\r\n\r\n<option id=\"ov3\"  value=\"1000\">Fast</option>\r\n\r\n<option id=\"ov5\"  value=\"2000\">Normal</option>\r\n<option  id=\"ov6\" value=\"4000\">Slow</option>\r\n</select></small></h1></div>\r\n                \r\n            </div>\r\n            <br/><br/><br/><br/>\r\n            <div className='container'>\r\n                <div className='grid'>\r\n                    <div className=\"row\">\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                        {Darray.map((value,index)=>{\r\n                            return (<div key={value.id} className='col'>\r\n                            <h1 className='rounded-circle text-center border border-secondary' \r\n                            ref={inputRef[value.id]}\r\n                            style={{backgroundColor:value.bgclr,position:'relative',width:'75px'}}>{value.data}</h1>\r\n                            </div>);})\r\n                        }\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                    </div><br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\"></div>\r\n                        {/* <Resetbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='reset' disabled={false} className='btn btn-outline-secondary' onClick={async()=>{\r\n                            setstate('Setting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[];\r\n                            var i=0;\r\n                            var id=setInterval(func,150);\r\n                            function func(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                da[i]=(Math.floor((Math.random()*100)+1));\r\n                                setval(i,da[i],\"lightgrey\");\r\n                                i++;\r\n                            }\r\n                            setstate('Ready');\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        } \r\n                    }>reset</button>\r\n                    </div>\r\n                        {/* <Startbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='start' className='btn btn-outline-primary' onClick={async()=>{\r\n                            setstate('Sorting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[Darray[0].data,Darray[1].data,Darray[2].data,Darray[3].data,Darray[4].data,Darray[5].data];\r\n                            var i=0;\r\n                            var id=setInterval(func1,150);\r\n                            function func1(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                setval(i,da[i],\"lightblue\");\r\n                                i++;\r\n                                return\r\n                            }\r\n                            \r\n                            for(var k=0;k<da.length;k++){\r\n                                var r=k;\r\n                                var min=da[k];\r\n                                var j=k+1;\r\n                                await sleep(time);\r\n                                setTimeout(func0(),time);\r\n                                        function func0(){\r\n                                            setval(r,da[r],\"orange\");\r\n                                            return\r\n                                        }\r\n                                await sleep(time);\r\n\r\n                                while(j<=5){\r\n                                    // await sleep(time);\r\n                                    setTimeout(func01(),time);\r\n                                        function func01(){\r\n                                                setval(j,da[j],\"royalblue\");\r\n                                                return        \r\n                                        }\r\n                                        await sleep(time);\r\n                                    setTimeout(func001(),time);\r\n                                        function func001(){\r\n                                                setval(j,da[j],\"royalblue\");\r\n                                                return        \r\n                                        }\r\n                                    \r\n                                    if(da[j]<min){\r\n                                        \r\n                                        setTimeout(func2(),time);\r\n                                        function func2(){\r\n                                            \r\n                                            setval(j,da[j],\"orange\");\r\n                                            setval(r,da[r],\"lightblue\");\r\n                                            min=da[j];\r\n                                            r=j;\r\n                                            return\r\n                                        }\r\n                                    await sleep(time);\r\n\r\n                                    }\r\n                                    else{\r\n                                        setTimeout(func02(),time);\r\n                                        function func02(){\r\n                                            \r\n                                            setval(j,da[j],\"lightblue\");\r\n                                            return\r\n                                        }\r\n                                    }\r\n                                    \r\n                                    j++;\r\n                                }\r\n                                // await sleep(time);\r\n                                setTimeout(func03(),time);\r\n                                function func03(){\r\n                                    setval(k,da[k],\"royalblue\");\r\n                                    return        \r\n                                }\r\n                                await sleep(time);\r\n                                setTimeout(func0003(),time);\r\n                                function func0003(){\r\n                                    setval(k,da[k],\"royalblue\");\r\n                                    return        \r\n                                }\r\n\r\n                                if(k==r){\r\n                                    setTimeout(func3(),time);\r\n                                    function func3(){\r\n                                        setval(k,da[k],\"lightgreen\");\r\n                                        return;        \r\n                                    }\r\n                                }\r\n                                else{\r\n                                    var temp=da[k];\r\n                                    inputRef[r].current.animate([\r\n                                        {opacity:1},\r\n                                        {transform:'rotate(180deg)'},\r\n                                        {opacity:0},\r\n                                        {transform:'rotate(180deg,360deg)'},\r\n                                        {opacity:1}\r\n                                    ],\r\n                                    {duration:1000\r\n                                    });\r\n                                                                                     \r\n                                                \r\n                                    inputRef[k].current.animate([\r\n                                        {opacity:1},\r\n                                        {transform:'rotate(180deg)'},\r\n                                        {opacity:0},\r\n                                        {transform:'rotate(180deg,360deg)'},\r\n                                        {opacity:1}\r\n\r\n\r\n\r\n                                    ],\r\n                                    {duration:1000\r\n                                    });\r\n                                    // await sleep(time);\r\n                                    setTimeout(func003(),time);\r\n                                    function func003(){\r\n                                        \r\n                                        setval(k,da[k],\"Coral\");\r\n                                        return;        \r\n                                    }\r\n                                    setTimeout(func03(),time);\r\n                                    function func03(){\r\n                                        setval(r,da[r],\"Coral\");\r\n                                        return        \r\n                                    }\r\n                                    da[k]=da[r];\r\n                                        da[r]=temp;\r\n                                // setTimeout(setval,1000,r,da[r],\"lightblue\");\r\n                                // setTimeout(setval,1000,r,da[r],\"lightblue\");\r\n\r\n\r\n                                }\r\n                                setTimeout(setval,500,r,da[r],\"lightblue\");\r\n                                \r\n                                setTimeout(setval,500,k,da[k],\"lightgreen\");\r\n                                \r\n                            }\r\n                            setTimeout(setval,1000,5,da[5],\"lightgreen\");\r\n                            setstate('Sorted!!')\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }    \r\n                    >start</button>\r\n                    </div>\r\n                        {/* <Reloadbtn/> */}\r\n                        <div className=\"col-4\">\r\n                        <button id='reload' className='btn btn-outline-warning' onClick={()=>{\r\n                            window.location.reload();\r\n                            }}>reload</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className='footer'>\r\n\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\nexport default Selectionsort; ","F:\\web\\react\\sortingvisualiser\\src\\Mergesort.jsx",["87","88","89","90","91","92","93","94","95","96","97","98","99"],"import { array } from 'prop-types';\r\nimport React, {useState,useRef } from 'react';\r\nimport './index.css'\r\n\r\n\r\nfunction Mergesort(){\r\n    var [time,settime]=useState(1000);\r\n    var [state,setstate]=useState('Unset');\r\n    var inputRef=array;\r\n    inputRef[0] = useRef()\r\n    inputRef[1] = useRef()\r\n    inputRef[2] = useRef()\r\n    inputRef[3] = useRef()\r\n    inputRef[4] = useRef()\r\n    inputRef[5] = useRef()\r\n    var [Darray,setArray]=useState([{\r\n        id:0,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:1,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:2,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:3,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:4,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:5,\r\n        data:0,\r\n        bgclr:'white',\r\n    }]);\r\n\r\n    \r\n    function setval(id,val,clr){\r\n        setArray((preValue)=>{\r\n            if(id===0){\r\n            return [\r\n                    {data:val,bgclr:clr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===1){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:val,bgclr:clr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===2){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:val,bgclr:clr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===3){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:val,bgclr:clr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n\r\n            }\r\n            else if(id===4){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:val,bgclr:clr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===5){\r\n            return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:val,bgclr:clr,id:preValue[5].id}\r\n                ]\r\n            }\r\n        })\r\n    }\r\n    function sleep(ms){\r\n        return new Promise(resolve=>setTimeout(resolve,ms));\r\n    }    \r\n    return(\r\n        <div>\r\n            <div className='container'>\r\n                <div>\r\n                    <p className='text-secondary' style={{float:'left'}}>{state}</p>\r\n                    <h1 style={{float:'inherit',textAlign:'center'}} className=''>MERGE SORT<small className='font-weight-normal font-size-small' style={{float:'right',fontSize:\"16px\",fontWeight:'normal'}}>\r\n                    Speed: <select id=\"std\" onChange={(event)=>\r\n                {   var x=document.getElementById('std').value;\r\n                    settime(x);\r\n                    }}>\r\n<option id=\"ov3\"  value=\"1000\">Fast</option>\r\n\r\n<option id=\"ov5\"  value=\"2000\">Normal</option>\r\n<option  id=\"ov6\" value=\"4000\">Slow</option>\r\n</select></small></h1></div>\r\n                \r\n            </div>\r\n            <br/><br/><br/><br/>\r\n            <div className='container'>\r\n                <div className='grid'>\r\n                    <div className=\"row\">\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                        {Darray.map((value,index)=>{\r\n                            return (<div key={value.id} className='col'>\r\n                            <h1 className='rounded-circle text-center border border-secondary' \r\n                            ref={inputRef[value.id]}\r\n                            style={{backgroundColor:value.bgclr,position:'relative',width:'75px'}}>{value.data}</h1>\r\n                            </div>);})\r\n                        }\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                    </div><br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\"></div>\r\n                        {/* <Resetbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='reset' disabled={false} className='btn btn-outline-secondary' onClick={async()=>{\r\n                            setstate('Setting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[];\r\n                            var i=0;\r\n                            var id=setInterval(func,150);\r\n                            function func(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                da[i]=(Math.floor((Math.random()*100)+1));\r\n                                setval(i,da[i],\"lightgrey\");\r\n                                i++;\r\n                            }\r\n                            setstate('Ready');\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }>reset</button>\r\n                    </div>\r\n                        {/* <Startbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='start' className='btn btn-outline-primary' onClick={async()=>{\r\n                            setstate('Sorting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[Darray[0].data,Darray[1].data,Darray[2].data,Darray[3].data,Darray[4].data,Darray[5].data];\r\n                            var id=setInterval(func1,150);\r\n                            var i=0;\r\n                                function func1(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                setval(i,da[i],\"lightblue\");\r\n                                i++;\r\n                                return\r\n                            }\r\n                            await sleep(time);\r\n                                var temp=[];\r\n                                var n=da.length;\r\n                                for  (var groupLen=1;groupLen<n;groupLen=groupLen<<1)\t\r\n                                {\t\r\n                                    var resCount=0;//The subscript of the temp array. The location where each merging result is stored in temp \t\t\r\n                                    var groupCount=Math.ceil(n*1.0/groupLen); //Number of groups, if less than one group, one group \t\t\r\n                                    var mergeCount=groupCount>>1;//The number of merging was once in two groups. Single group does not merge. \t\t\t\r\n                                    //The second step is to merge the two groups.\t\t\r\n                                    \r\n                                    for (var i = 0;i<mergeCount;i++)\t\t\r\n                                    {   \r\n                                        var id=setInterval(func1,150);\r\n                            var x=0;\r\n                                function func1(){\r\n                                if(x>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                setval(x,da[x],\"lightblue\");\r\n                                x++;\r\n                                return\r\n                            }\r\n                                        await sleep(time);\r\n                                        var left = (i*groupLen)<<1; //Start position of left group \t\t\t\r\n                                        var leftSide=left+groupLen; //The end of the left group.\t\t\t\r\n                                        var right=leftSide;  //Start position of right group \t\t\t\r\n                                        var rightSide=(n<right+groupLen)?n:right+groupLen; \t//The end of the right group.\t\t\t\t\t\t\r\n                                        //Merge two arrays. Merging can encapsulate an inline function without affecting performance. This is the benefit of non recursion. Recursion cannot inline. \t\t\t\r\n                                        while (left<leftSide&&right<rightSide) \t\t\t\r\n                                        {\t//Merge: put the smaller one of the two group headers into a temporary array.\t\t\t\t\t\r\n                                            setTimeout(func0(),time);\r\n                                            function func0(){\r\n                                                setval(left,da[left],\"orange\");\r\n                                                return\r\n                                            }\r\n                                            setTimeout(func1(),time);\r\n                                            function func1(){\r\n                                                setval(right,da[right],\"blue\");\r\n                                                return\r\n                                            }\r\n                                            if(da[left]<=da[right]){ //If you use da [left] < da [right], it is unstable.\t\t\t\t\t\t\r\n                                                left++;\r\n                                            }\t\t\t\t\t\t\r\n                                            else{\r\n                                                right++;\r\n                                            }\r\n                                        }\r\n                                            \t\t\r\n                                        while (left<leftSide){ //The rest of the left group is copied to the temporary array \t\t\t\t\t\r\n                                            setTimeout(func3(),time);\r\n                                            function func3(){\r\n                                                setval(left,da[left],\"orange\");\r\n                                                return\r\n                                            }\r\n                                            left++;\r\n                                        }\r\n                                        while (right<rightSide){ //Copy the rest of the right group to the temporary array \t\t\t\t\r\n                                            setTimeout(func4(),time);\r\n                                            function func4(){\r\n                                                setval(right,da[right],\"blue\");\r\n                                                return\r\n                                            }\r\n                                            right++;\r\n                                        }\r\n                                        await sleep(time);\r\n\r\n\r\n                                        var left = (i*groupLen)<<1; //Start position of left group \t\t\t\r\n                                        var leftSide=left+groupLen; //The end of the left group.\t\t\t\r\n                                        var right=leftSide;  //Start position of right group \t\t\t\r\n                                        var rightSide=(n<right+groupLen)?n:right+groupLen;\r\n                                        while (left<leftSide&&right<rightSide) \t\t\t\r\n                                        {\t//Merge: put the smaller one of the two group headers into a temporary array.\t\t\t\t\t\r\n                                            inputRef[left].current.style.opacity=0;\r\n                                            inputRef[right].current.style.opacity=0;\r\n                                            if(da[left]<=da[right]){ //If you use da [left] < da [right], it is unstable.\t\t\t\t\t\t\r\n                                                temp[resCount]=da[left];\r\n                                                left++;\r\n                                            }\t\t\t\t\t\t\r\n                                            else{\r\n                                                temp[resCount]=da[right];\t\t\t\t\r\n                                                right++;\r\n                                            }\r\n                                            resCount++;\r\n                                        }\r\n                                        while (left<leftSide){ //The rest of the left group is copied to the temporary array \t\t\t\t\t\r\n                                            // inputRef[left].current.style.opacity=0;\r\n                                            \r\n                                            temp[resCount++]=da[left++];\r\n                                        }\r\n                                        while (right<rightSide){ //Copy the rest of the right group to the temporary array \t\t\t\t\r\n                                            // inputRef[right].current.style.opacity=0;\r\n                                            inputRef[left].current.animate([\r\n                                                {opacity:0}\r\n                                            ],\r\n                                            {duration:500\r\n                                            });\r\n                                            temp[resCount++]=da[right++];\r\n                                        }\t\t    \r\n                                        for (left = i<<1; left < rightSide;left++){ //Copy the merging result data of the temporary array back to the original array. \t\t        \r\n                                        await sleep(time);\r\n                                        setTimeout(func4(),time);\r\n                                        function func4(){\r\n                                            setval(left,da[left],\"blue\");\r\n                                            return\r\n                                        }\r\n                                        da[left] = temp[left];\r\n                                        setTimeout(func6(),time);\r\n                                        function func6(){\r\n                                            setval(left,da[left],\"lightgreen\");\r\n                                            return\r\n                                        }\r\n                                        inputRef[left].current.animate([\r\n                                            {opacity:0},\r\n                                            {opacity:1},\r\n                                        ],\r\n                                        {duration:500\r\n                                        });\r\n                                        inputRef[left].current.style.opacity=1;\r\n\r\n                                        }\r\n                                        await sleep(time);\r\n                                        \r\n                                    }\r\n\r\n                                }\r\n                            setstate('Sorted!!')\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }\r\n                    >start</button>\r\n                    </div>\r\n                        {/* <Reloadbtn/> */}\r\n                        <div className=\"col-4\">\r\n                        <button id='reload' className='btn btn-outline-warning' onClick={()=>{\r\n                            window.location.reload();\r\n                            }}>reload</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className='footer'>\r\n\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\nexport default Mergesort; ","F:\\web\\react\\sortingvisualiser\\src\\Insertionsort.jsx",["100","101","102","103","104"],"import { array } from 'prop-types';\r\nimport React, {useState,useRef } from 'react';\r\nimport './index.css'\r\n\r\n\r\nfunction Insertionsort(){\r\n    var [time,settime]=useState(1000);\r\n    var [state,setstate]=useState('Unset');\r\n    var inputRef=array;\r\n    inputRef[0] = useRef()\r\n    inputRef[1] = useRef()\r\n    inputRef[2] = useRef()\r\n    inputRef[3] = useRef()\r\n    inputRef[4] = useRef()\r\n    inputRef[5] = useRef()\r\n    var [Darray,setArray]=useState([{\r\n        id:0,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:1,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:2,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:3,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:4,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:5,\r\n        data:0,\r\n        bgclr:'white',\r\n    }]);\r\n\r\n    \r\n    function setval(id,val,clr){\r\n        setArray((preValue)=>{\r\n            if(id===0){\r\n            return [\r\n                    {data:val,bgclr:clr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===1){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:val,bgclr:clr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===2){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:val,bgclr:clr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===3){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:val,bgclr:clr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n\r\n            }\r\n            else if(id===4){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:val,bgclr:clr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===5){\r\n            return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:val,bgclr:clr,id:preValue[5].id}\r\n                ]\r\n            }\r\n        })\r\n    }\r\n    function sleep(ms){\r\n        return new Promise(resolve=>setTimeout(resolve,ms));\r\n    }    \r\n    return(\r\n        <div>\r\n            <div className='container'>\r\n                <div>\r\n                    <p className='text-secondary' style={{float:'left'}}>{state}</p>\r\n                    <h1 style={{float:'inherit',textAlign:'center'}} className=''>INSERTION SORT<small className='font-weight-normal font-size-small' style={{float:'right',fontSize:\"16px\",fontWeight:'normal'}}>\r\n                    Speed: <select id=\"std\" onChange={(event)=>\r\n                {   var x=document.getElementById('std').value;\r\n                    settime(x);\r\n                    }}>\r\n<option id=\"ov3\"  value=\"1000\">Fast</option>\r\n<option id=\"ov5\"  value=\"2000\">Normal</option>\r\n<option  id=\"ov6\" value=\"4000\">Slow</option>\r\n</select></small></h1></div>\r\n                \r\n            </div>\r\n            <br/><br/><br/><br/>\r\n            <div className='container'>\r\n                <div className='grid'>\r\n                    <div className=\"row\">\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                        {Darray.map((value,index)=>{\r\n                            return (<div key={value.id} className='col'>\r\n                            <h1 className='rounded-circle text-center border border-secondary' \r\n                            ref={inputRef[value.id]}\r\n                            style={{backgroundColor:value.bgclr,position:'relative',width:'75px'}}>{value.data}</h1>\r\n                            </div>);})\r\n                        }\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                    </div><br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\"></div>\r\n                        {/* <Resetbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='reset' disabled={false} className='btn btn-outline-secondary' onClick={async()=>{\r\n                            setstate('Setting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[];\r\n                            var i=0;\r\n                            var id=setInterval(func,150);\r\n                            function func(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                da[i]=(Math.floor((Math.random()*100)+1));\r\n                                setval(i,da[i],\"lightgrey\");\r\n                                i++;\r\n                            }\r\n                            setstate('Ready');\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        } \r\n                    }>reset</button>\r\n                    </div>\r\n                        {/* <Startbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='start' className='btn btn-outline-primary' onClick={async()=>{\r\n                            setstate('Sorting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[Darray[0].data,Darray[1].data,Darray[2].data,Darray[3].data,Darray[4].data,Darray[5].data];\r\n                            var i=0;\r\n                            var id=setInterval(func1,150);\r\n                            function func1(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                setval(i,da[i],\"lightblue\");\r\n                                i++;\r\n                                return\r\n                            }\r\n                            \r\n                            for(var r=0;r<da.length;r++){\r\n                                var k=r;\r\n                                let key=da[k];\r\n                                var j=k-1;\r\n                                    await sleep(time);\r\n                                    setTimeout(func0(),time);\r\n                                        function func0(){\r\n                                            setval(k,da[k],\"royalblue\");\r\n                                            return\r\n                                        }\r\n                                while(j>=0 && da[j]>key){\r\n                                    await sleep(time);\r\n                                    setTimeout(func0(),time);\r\n                                        function func0(){\r\n                                            setval(k,da[k],\"royalblue\");\r\n                                            return\r\n                                        }\r\n                                    setTimeout(func01(),time);\r\n                                        function func01(){\r\n                                                setval(j,da[j],\"royalblue\");\r\n                                                return        \r\n                                        }\r\n                                    \r\n                                    if(da[j]>key){\r\n                                        var temp=da[j];\r\n                                        setTimeout(func2(),time);\r\n                                        function func2(){\r\n                                            \r\n                                            setval(j,da[j],\"Coral\");\r\n                                            \r\n                                            da[j]=da[k];\r\n                                            \r\n                                            return\r\n                                        }\r\n                                        inputRef[j].current.animate([\r\n                                            {transform:'translateX(0px)'},\r\n                                            {transform:'translateY(-80px)'},\r\n\r\n                                            {transform:'translateX(+120px) rotate(360deg)'}\r\n                                        ],\r\n                                        {duration:1000\r\n                                        });\r\n                                        setTimeout(func3(),time);\r\n                                        function func3(){\r\n                                                \r\n                                                setval(k,da[k],\"Coral\");\r\n                                                da[k]=temp;\r\n                                                return        \r\n                                        }                                     \r\n                                        \r\n                                        inputRef[k].current.animate([\r\n                                            {transform:'translateX(0px)'},\r\n                                            {transform:'translateX(-120px) rotate(360deg)'}\r\n                                        ],\r\n                                        {duration:1000\r\n                                        });\r\n                                        \r\n                                    }\r\n                                    setTimeout(setval,1000,j,da[j],\"orange\");\r\n                                    setTimeout(setval,1000,k,da[k],\"lightgreen\");\r\n                                        \r\n                                    j--;\r\n                                    k--;\r\n                                    \r\n                                }\r\n                                setTimeout(setval,1000,k,da[k],\"lightgreen\");\r\n                                \r\n                            }\r\n                            setTimeout(setval,1000,5,da[5],\"lightgreen\");\r\n                            setstate('Sorted!!')\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }    \r\n                    >start</button>\r\n                    </div>\r\n                        {/* <Reloadbtn/> */}\r\n                        <div className=\"col-4\">\r\n                        <button id='reload' className='btn btn-outline-warning' onClick={()=>{\r\n                            window.location.reload();\r\n                            }}>reload</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className='footer'>\r\n\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\nexport default Insertionsort; ","F:\\web\\react\\sortingvisualiser\\src\\Home.jsx",["105","106","107","108"],"import React from 'react';\r\nimport bubble from './bubble.PNG'\r\nimport insertion from './insertion.PNG'\r\nimport selection from './selection.PNG'\r\nimport merge from './merge.PNG'\r\n\r\nconst Home=()=>{\r\n    return(\r\n        <>\r\n            <h1><center>V  I  S  A  L</center></h1>\r\n            <pre><center>Algorithm visualization platform</center></pre><br/>\r\n            <div className='px-0'>&nbsp;\r\n                <a href=\"/Bubblesort\" className='mx-2'>\r\n                    <img className='image-responsive' id='img1' src={bubble} \r\n                    Style='height:160px;width:250px; box-shadow:0 2px 4px 0 grey,0 2px 10px 0 grey;' \r\n                    onMouseOver={()=>{document.getElementById('img1').style.opacity=0.7;}}\r\n                    onMouseOut={()=>{document.getElementById('img1').style.opacity=1;}}/>\r\n                </a>\r\n                <a href=\"/Insertionsort\" className='mx-2'>\r\n                    <img className='image-responsive' id='img2' src={insertion} \r\n                    Style='height:160px;width:250px; box-shadow:0 2px 4px 0 grey,0 2px 10px 0 grey;' \r\n                    onMouseOver={()=>{document.getElementById('img2').style.opacity=0.7;}}\r\n                    onMouseOut={()=>{document.getElementById('img2').style.opacity=1;}}/>\r\n                </a>\r\n                <a href=\"/Selectionsort\" className='mx-2'>\r\n                    <img className='image-responsive' id='img3' src={selection} \r\n                    Style='height:160px;width:250px; box-shadow:0 2px 4px 0 grey,0 2px 10px 0 grey;' \r\n                    onMouseOver={()=>{document.getElementById('img3').style.opacity=0.7;}}\r\n                    onMouseOut={()=>{document.getElementById('img3').style.opacity=1;}}/>\r\n                </a>\r\n                <a href=\"/Mergesort\" className='mx-2'>\r\n                    <img className='image-responsive' id='img4' src={merge} \r\n                    Style='height:160px;width:250px; box-shadow:0 2px 4px 0 grey,0 2px 10px 0 grey;' \r\n                    onMouseOver={()=>{document.getElementById('img4').style.opacity=0.7;}}\r\n                    onMouseOut={()=>{document.getElementById('img4').style.opacity=1;}}/>\r\n                </a>\r\n                \r\n            </div>\r\n            <br/>\r\n            <h2><pre>    BUBBLE SORT     INSERTION SORT    SELECTION SORT      MERGE SORT</pre></h2>\r\n        </>\r\n    );\r\n}\r\nexport default Home;","F:\\web\\react\\sortingvisualiser\\src\\Footer.jsx",["109"],"import React from \"react\";\r\nimport { ReactDOM } from \"react\";\r\n\r\nconst Footer=()=>{\r\n    return(\r\n    <>\r\n    <div className='footer' Style='width:100%;bottom:0;position:fixed;'>\r\n            <footer className=\"d-flex footer-dark bg-dark flex-wrap justify-content-between align-items-center py-1 border-top\">\r\n                <div className=\"col-md-12 d-flex align-items-center\">\r\n                <span className=\"text-light\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&copy; Copyright 2021 Harjot, Inc</span>\r\n                \r\n\r\n                <ul className=\"nav col-md-9 justify-content-end list-unstyled d-flex\">\r\n                <li className=\"\"></li>\r\n                <li className=\"ms-3\"><a className=\"text-light\" href=\"https://twitter.com/\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-twitter\" viewBox=\"0 0 16 16\"><path d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z\"/></svg></a></li>\r\n                <li  className=\"ms-3 \"><a className=\"text-light\" href=\"https://www.instagram.com/harjotdhillon99/\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-instagram\" viewBox=\"0 0 16 16\"><path d=\"M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z\"/></svg></a></li>\r\n                <li className=\"ms-3\"><a className=\"text-light\" href=\"https://www.facebook.com/\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-facebook\" viewBox=\"0 0 16 16\"><path d=\"M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z\"/></svg></a></li>\r\n                </ul>\r\n                </div>\r\n            </footer>\r\n\r\n\r\n            </div>\r\n    </>\r\n);}\r\nexport default Footer;","F:\\web\\react\\sortingvisualiser\\src\\About.jsx",["110","111","112","113"],"import React from 'react';\r\nimport bubble from './bubble.PNG'\r\nimport reset from './reset.png'\r\nimport start from './start.png'\r\nimport reload from './reload.png'\r\nconst About=()=>{return(\r\n    <>\r\n        <div className='container'>\r\n        <h3 Style=\"text-align:center;\">ALGORITHM VISUALIZATION PLATFORM</h3>\r\n        <p>\r\n            In addition to the mathematical and empirical \r\n           analyses of algorithms, there is yet a third \r\n           way to study algorithms. It is called algorithm \r\n           visualization and can be defined as the use of \r\n           images to convey some useful information about \r\n           algorithms. That information can be a visual illustration \r\n           of an algorithm’s operation, of its performance on different \r\n           kinds of inputs, or of its execution speed versus that of \r\n           other algorithms for the same problem. To accomplish this \r\n           goal, an algorithm visualization uses graphic elements points, \r\n           two-dimensional data-circles, and so on to represent some \r\n           “interesting events” in the algorithm’s operation.\r\n        </p>\r\n        <h3 Style=\"text-align:center;\">How to use</h3>\r\n        <p>The following is the window you will see when you use algorithm \r\n            visualization platform to visualize algorithms. This window consists of \r\n            six data circles initially all set to zero, and it consists of three buttons i.e. reset, start, reload.\r\n        </p>\r\n        &nbsp;<img src={bubble} Style='height:275px; width:500px;margin-left:auto;margin-right:auto;display:block;'/>\r\n        <br/><br/><br/>\r\n        <p>Following image shows the reset button, clicking on this reset button will \r\n            set the data-circles to different random numbers. Each time you click on \r\n            reset button six data-circles will be set to new random values. \r\n        </p>\r\n        &nbsp;<img src={reset} Style='height:275px; width:500px;margin-left:auto;margin-right:auto;display:block;'/>\r\n        <br/><br/><br/>\r\n        <p>Following image shows the start button, clicking on this start button will \r\n            start to visualizing different algorithms using an interactive animation. \r\n        </p>\r\n        &nbsp;<img src={start} Style='height:275px; width:500px;margin-left:auto;margin-right:auto;display:block;'/>\r\n        <br/><br/><br/>\r\n        <p>Following image shows the reload button, clicking on this reload button will \r\n            reload the entire page, user can press reload button in case the page is not \r\n            loaded properly or in case of any unexpected functioning. \r\n        </p>\r\n        &nbsp;<img src={reload} Style='height:275px; width:500px;image-border:5px;margin-left:auto;margin-right:auto;display:block;'/>\r\n        <br/><br/><br/>\r\n        </div>\r\n    </>\r\n);}\r\nexport default About;","F:\\web\\react\\sortingvisualiser\\src\\Contact.jsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":205,"column":41,"nodeType":"120","messageId":"121","endLine":208,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":210,"column":41,"nodeType":"120","messageId":"121","endLine":213,"endColumn":42},{"ruleId":"118","severity":1,"message":"122","line":217,"column":41,"nodeType":"120","messageId":"121","endLine":224,"endColumn":42},{"ruleId":"118","severity":1,"message":"123","line":232,"column":41,"nodeType":"120","messageId":"121","endLine":239,"endColumn":42},{"ruleId":"118","severity":1,"message":"124","line":207,"column":41,"nodeType":"120","messageId":"121","endLine":210,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":216,"column":41,"nodeType":"120","messageId":"121","endLine":219,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":222,"column":41,"nodeType":"120","messageId":"121","endLine":225,"endColumn":42},{"ruleId":"118","severity":1,"message":"125","line":230,"column":41,"nodeType":"120","messageId":"121","endLine":237,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":243,"column":41,"nodeType":"120","messageId":"121","endLine":247,"endColumn":42},{"ruleId":"118","severity":1,"message":"126","line":254,"column":33,"nodeType":"120","messageId":"121","endLine":257,"endColumn":34},{"ruleId":"118","severity":1,"message":"126","line":260,"column":33,"nodeType":"120","messageId":"121","endLine":263,"endColumn":34},{"ruleId":"127","severity":1,"message":"128","line":265,"column":37,"nodeType":"129","messageId":"130","endLine":265,"endColumn":39},{"ruleId":"118","severity":1,"message":"126","line":267,"column":37,"nodeType":"120","messageId":"121","endLine":270,"endColumn":38},{"ruleId":"118","severity":1,"message":"126","line":299,"column":37,"nodeType":"120","messageId":"121","endLine":303,"endColumn":38},{"ruleId":"118","severity":1,"message":"124","line":305,"column":37,"nodeType":"120","messageId":"121","endLine":308,"endColumn":38},{"ruleId":"131","severity":1,"message":"132","line":209,"column":46,"nodeType":"133","messageId":"134","endLine":209,"endColumn":47},{"ruleId":"131","severity":1,"message":"135","line":211,"column":45,"nodeType":"133","messageId":"134","endLine":211,"endColumn":47},{"ruleId":"118","severity":1,"message":"136","line":213,"column":33,"nodeType":"120","messageId":"121","endLine":220,"endColumn":30},{"ruleId":"118","severity":1,"message":"137","line":230,"column":45,"nodeType":"120","messageId":"121","endLine":233,"endColumn":46},{"ruleId":"118","severity":1,"message":"138","line":235,"column":45,"nodeType":"120","messageId":"121","endLine":238,"endColumn":46},{"ruleId":"118","severity":1,"message":"137","line":249,"column":45,"nodeType":"120","messageId":"121","endLine":252,"endColumn":46},{"ruleId":"118","severity":1,"message":"138","line":257,"column":45,"nodeType":"120","messageId":"121","endLine":260,"endColumn":46},{"ruleId":"131","severity":1,"message":"139","line":266,"column":45,"nodeType":"133","messageId":"134","endLine":266,"endColumn":49},{"ruleId":"131","severity":1,"message":"140","line":267,"column":45,"nodeType":"133","messageId":"134","endLine":267,"endColumn":53},{"ruleId":"131","severity":1,"message":"141","line":268,"column":45,"nodeType":"133","messageId":"134","endLine":268,"endColumn":50},{"ruleId":"131","severity":1,"message":"142","line":269,"column":45,"nodeType":"133","messageId":"134","endLine":269,"endColumn":54},{"ruleId":"118","severity":1,"message":"137","line":301,"column":41,"nodeType":"120","messageId":"121","endLine":304,"endColumn":42},{"ruleId":"118","severity":1,"message":"137","line":307,"column":41,"nodeType":"120","messageId":"121","endLine":310,"endColumn":42},{"ruleId":"118","severity":1,"message":"126","line":205,"column":41,"nodeType":"120","messageId":"121","endLine":208,"endColumn":42},{"ruleId":"118","severity":1,"message":"126","line":212,"column":41,"nodeType":"120","messageId":"121","endLine":215,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":217,"column":41,"nodeType":"120","messageId":"121","endLine":220,"endColumn":42},{"ruleId":"118","severity":1,"message":"143","line":225,"column":41,"nodeType":"120","messageId":"121","endLine":232,"endColumn":42},{"ruleId":"118","severity":1,"message":"144","line":242,"column":41,"nodeType":"120","messageId":"121","endLine":247,"endColumn":42},{"ruleId":"145","severity":1,"message":"146","line":14,"column":21,"nodeType":"147","endLine":17,"endColumn":90},{"ruleId":"145","severity":1,"message":"146","line":20,"column":21,"nodeType":"147","endLine":23,"endColumn":90},{"ruleId":"145","severity":1,"message":"146","line":26,"column":21,"nodeType":"147","endLine":29,"endColumn":90},{"ruleId":"145","severity":1,"message":"146","line":32,"column":21,"nodeType":"147","endLine":35,"endColumn":90},{"ruleId":"148","severity":1,"message":"149","line":2,"column":10,"nodeType":"133","messageId":"150","endLine":2,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":29,"column":15,"nodeType":"147","endLine":29,"endColumn":118},{"ruleId":"145","severity":1,"message":"146","line":35,"column":15,"nodeType":"147","endLine":35,"endColumn":117},{"ruleId":"145","severity":1,"message":"146","line":40,"column":15,"nodeType":"147","endLine":40,"endColumn":117},{"ruleId":"145","severity":1,"message":"146","line":46,"column":15,"nodeType":"147","endLine":46,"endColumn":135},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'j', 'j'.","FunctionDeclaration","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'j', 'j', 'j', 'j'.","Function declared in a loop contains unsafe references to variable(s) 'j', 'j', 'j', 'temp'.","Function declared in a loop contains unsafe references to variable(s) 'r', 'r'.","Function declared in a loop contains unsafe references to variable(s) 'j', 'j', 'r', 'r', 'min', 'j', 'r', 'j'.","Function declared in a loop contains unsafe references to variable(s) 'k', 'k'.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","Identifier","redeclared","'id' is already defined.","Function declared in a loop contains unsafe references to variable(s) 'x', 'id', 'x', 'x', 'x'.","Function declared in a loop contains unsafe references to variable(s) 'left', 'left'.","Function declared in a loop contains unsafe references to variable(s) 'right', 'right'.","'left' is already defined.","'leftSide' is already defined.","'right' is already defined.","'rightSide' is already defined.","Function declared in a loop contains unsafe references to variable(s) 'j', 'j', 'j', 'k'.","Function declared in a loop contains unsafe references to variable(s) 'k', 'k', 'k', 'temp'.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'ReactDOM' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation"]