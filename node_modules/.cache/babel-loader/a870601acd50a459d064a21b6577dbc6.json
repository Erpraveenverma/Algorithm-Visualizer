{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\react\\\\sortingvisualiser\\\\src\\\\Mergesort.jsx\",\n    _s = $RefreshSig$();\n\nimport { array } from 'prop-types';\nimport React, { useState, useEffect, useRef } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Mergesort() {\n  _s();\n\n  var [time, settime] = useState(20);\n  var [state, setstate] = useState('Unset');\n  var inputRef = array;\n  inputRef[0] = useRef();\n  inputRef[1] = useRef();\n  inputRef[2] = useRef();\n  inputRef[3] = useRef();\n  inputRef[4] = useRef();\n  inputRef[5] = useRef();\n  var [Darray, setArray] = useState([{\n    id: 0,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 1,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 2,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 3,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 4,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 5,\n    data: 0,\n    bgclr: 'white'\n  }]);\n\n  function setval(id, val, clr) {\n    setArray(preValue => {\n      if (id === 0) {\n        return [{\n          data: val,\n          bgclr: clr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 1) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 2) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 3) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 4) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 5) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[5].id\n        }];\n      }\n    });\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-secondary\",\n          style: {\n            float: 'left'\n          },\n          children: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            float: 'inherit',\n            textAlign: 'center'\n          },\n          className: \"\",\n          children: [\"Merge Sort\", /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"font-weight-normal font-size-small\",\n            style: {\n              float: 'right',\n              fontSize: \"16px\",\n              fontWeight: 'normal'\n            },\n            children: [\"Speed: \", /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"std\",\n              onChange: event => {\n                var x = document.getElementById('std').value;\n                settime(x);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov1\",\n                value: \"20\",\n                children: \"0 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov2\",\n                value: \"500\",\n                children: \"0.5 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov3\",\n                value: \"1000\",\n                children: \"1 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov4\",\n                value: \"1500\",\n                children: \"1.5 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov5\",\n                value: \"2000\",\n                children: \"2 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov6\",\n                value: \"4000\",\n                children: \"4 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 158\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 86\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"grid-item\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), Darray.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"rounded-circle text-center border border-secondary\",\n                ref: inputRef[value.id],\n                style: {\n                  backgroundColor: value.bgclr,\n                  position: 'relative',\n                  width: '75px'\n                },\n                children: value.data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this)\n            }, value.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"grid-item\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"reset\",\n              disabled: false,\n              className: \"btn btn-outline-secondary\",\n              onClick: async () => {\n                setstate('Setting...');\n                document.getElementById('reset').disabled = true;\n                document.getElementById('start').disabled = true;\n                document.getElementById('reload').disabled = true;\n                document.getElementById('std').disabled = true;\n                var da = [];\n                var i = 0;\n                var id = setInterval(func, 150);\n\n                function func() {\n                  if (i > 4) {\n                    clearInterval(id);\n                  }\n\n                  da[i] = Math.floor(Math.random() * 100 + 1);\n                  setval(i, da[i], \"lightgrey\");\n                  i++;\n                }\n\n                setstate('Ready');\n                document.getElementById('reset').disabled = false;\n                document.getElementById('start').disabled = false;\n                document.getElementById('reload').disabled = false;\n                document.getElementById('std').disabled = false;\n              },\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"start\",\n              className: \"btn btn-outline-primary\",\n              onClick: async () => {\n                setstate('Sorting...');\n                document.getElementById('reset').disabled = true;\n                document.getElementById('start').disabled = true;\n                document.getElementById('reload').disabled = true;\n                document.getElementById('std').disabled = true;\n                var da = [Darray[0].data, Darray[1].data, Darray[2].data, Darray[3].data, Darray[4].data, Darray[5].data];\n                var id = setInterval(func1, 150);\n                var i = 0;\n\n                function func1() {\n                  if (i > 4) {\n                    clearInterval(id);\n                  }\n\n                  setval(i, da[i], \"lightblue\");\n                  i++;\n                  return;\n                }\n\n                await sleep(time);\n                var temp = [];\n                var n = da.length;\n\n                for (var groupLen = 1; groupLen < n; groupLen = groupLen << 1) {\n                  var resCount = 0; //The subscript of the temp array. The location where each merging result is stored in temp \t\t\n\n                  var groupCount = Math.ceil(n * 1.0 / groupLen); //Number of groups, if less than one group, one group \t\t\n\n                  var mergeCount = groupCount >> 1; //The number of merging was once in two groups. Single group does not merge. \t\t\t\n                  //The second step is to merge the two groups.\t\t\n\n                  for (var i = 0; i < mergeCount; i++) {\n                    await sleep(time);\n                    var left = i * groupLen << 1; //Start position of left group \t\t\t\n\n                    var leftSide = left + groupLen; //The end of the left group.\t\t\t\n\n                    var right = leftSide; //Start position of right group \t\t\t\n\n                    var rightSide = n < right + groupLen ? n : right + groupLen; //The end of the right group.\t\t\t\t\t\t\n                    //Merge two arrays. Merging can encapsulate an inline function without affecting performance. This is the benefit of non recursion. Recursion cannot inline. \t\t\t\n                    // for(var z=0;z<groupLen;z++)\n\n                    while (left < leftSide && right < rightSide) {\n                      //Merge: put the smaller one of the two group headers into a temporary array.\t\t\t\t\t\n                      setTimeout(func0(), time);\n\n                      function func0() {\n                        setval(left, da[left], \"orange\");\n                        return;\n                      }\n\n                      setTimeout(func1(), time);\n\n                      function func1() {\n                        setval(right, da[right], \"blue\");\n                        return;\n                      }\n\n                      if (da[left] <= da[right]) {\n                        //If you use da [left] < da [right], it is unstable.\t\t\t\t\t\t\n                        left++;\n                      } else {\n                        right++;\n                      }\n                    }\n\n                    while (left < leftSide) {\n                      //The rest of the left group is copied to the temporary array \t\t\t\t\t\n                      setTimeout(func3(), time);\n\n                      function func3() {\n                        setval(left, da[left], \"orange\");\n                        return;\n                      }\n\n                      left++;\n                    }\n\n                    while (right < rightSide) {\n                      //Copy the rest of the right group to the temporary array \t\t\t\t\n                      setTimeout(func4(), time);\n\n                      function func4() {\n                        setval(right, da[right], \"blue\");\n                        return;\n                      }\n\n                      await sleep(time);\n                      right++; // temp[resCount++]=da[right++];\n                    }\n\n                    while (left < leftSide && right < rightSide) {\n                      //Merge: put the smaller one of the two group headers into a temporary array.\t\t\t\t\t\n                      // await sleep(time);\n                      setTimeout(func0(), time);\n\n                      function func0() {\n                        setval(left, da[left], \"orange\");\n                        return;\n                      } //    await sleep(time);\n                      // await sleep(time);\n\n\n                      setTimeout(func1(), time);\n\n                      function func1() {\n                        setval(right, da[right], \"blue\");\n                        return;\n                      }\n\n                      inputRef[left].current.style.opacity = 0;\n                      inputRef[right].current.style.opacity = 0;\n\n                      if (da[left] <= da[right]) {\n                        //If you use da [left] < da [right], it is unstable.\t\t\t\t\t\t\n                        temp[resCount] = da[left];\n                        left++;\n                      } else {\n                        temp[resCount] = da[right]; // await sleep(time);\n                        // setTimeout(func1(),time);\n                        // function func1(){\n                        //     setval(right,temp[right],\"blue\");\n                        //     return\n                        // }\n\n                        right++;\n                      } // await sleep(time);\n                      // setTimeout(func2(),time);\n                      // function func2(){\n                      //     setval(resCount,temp[resCount],\"lightblue\");\n                      //     return\n                      // }\n\n\n                      resCount++;\n                    }\n\n                    while (left < leftSide) {\n                      //The rest of the left group is copied to the temporary array \t\t\t\t\t\n                      // await sleep(time);\n                      setTimeout(func3(), time);\n\n                      function func3() {\n                        setval(left, da[left], \"orange\");\n                        return;\n                      } // await sleep(time);\n\n\n                      temp[resCount++] = da[left++];\n                    }\n\n                    while (right < rightSide) {\n                      //Copy the rest of the right group to the temporary array \t\t\t\t\n                      // await sleep(time);\n                      setTimeout(func4(), time);\n\n                      function func4() {\n                        setval(right, da[right], \"blue\");\n                        return;\n                      }\n\n                      await sleep(time);\n                      temp[resCount++] = da[right++];\n                    }\n\n                    for (left = i << 1; left < rightSide; left++) {\n                      //Copy the merging result data of the temporary array back to the original array. \t\t        \n                      await sleep(time); // inputRef[right].current.animate([\n                      //     {opacity:0},\n                      //     // {transform:'rotate(180deg)'},\n                      //     {opacity:1},\n                      //     // {transform:'rotate(180deg,360deg)'},\n                      //     // {opacity:1}\n                      // ],\n                      // {duration:1000\n                      // });\n                      // inputRef[right].current.style.opacity=1;\n                      // setTimeout(func4(),time);\n\n                      function func4() {\n                        setval(left, da[left], \"blue\");\n                        return;\n                      } // await sleep(time);\n                      // setTimeout(func5(),time);\n                      // function func5(){\n                      //     setval(left,temp[left],\"blue\");\n                      //     return\n                      // }\n\n\n                      da[left] = temp[left]; // await sleep(time);\n\n                      setTimeout(func6(), time);\n\n                      function func6() {\n                        setval(left, da[left], \"lightblue\");\n                        return;\n                      } // await sleep(time);\n                      // setTimeout(func7(),time);\n                      // function func7(){\n                      //     setval(left,temp[left],\"lightblue\");\n                      //     return\n                      // }\n\n\n                      inputRef[left].current.animate([{\n                        opacity: 0\n                      }, // {transform:'rotate(180deg)'},\n                      {\n                        opacity: 1\n                      } // {transform:'rotate(180deg,360deg)'},\n                      // {opacity:1}\n                      ], {\n                        duration: 1000\n                      });\n                      inputRef[left].current.style.opacity = 1;\n                    }\n\n                    console.log(da);\n                  }\n                } // document.write(da);                            \n\n\n                setstate('Sorted!!');\n                document.getElementById('reset').disabled = false;\n                document.getElementById('start').disabled = false;\n                document.getElementById('reload').disabled = false;\n                document.getElementById('std').disabled = false;\n              },\n              children: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"reload\",\n              className: \"btn btn-outline-warning\",\n              onClick: () => {\n                window.location.reload();\n              },\n              children: \"reload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mergesort, \"PTuzwd8QebY2Vs2vNZKuKi+LjJY=\");\n\n_c = Mergesort;\nexport default Mergesort;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mergesort\");","map":{"version":3,"sources":["F:/web/react/sortingvisualiser/src/Mergesort.jsx"],"names":["array","React","useState","useEffect","useRef","Mergesort","time","settime","state","setstate","inputRef","Darray","setArray","id","data","bgclr","setval","val","clr","preValue","sleep","ms","Promise","resolve","setTimeout","float","textAlign","fontSize","fontWeight","event","x","document","getElementById","value","map","index","backgroundColor","position","width","disabled","da","i","setInterval","func","clearInterval","Math","floor","random","func1","temp","n","length","groupLen","resCount","groupCount","ceil","mergeCount","left","leftSide","right","rightSide","func0","func3","func4","current","style","opacity","func6","animate","duration","console","log","window","location","reload"],"mappings":"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","sourcesContent":["import { array } from 'prop-types';\r\nimport React, {useState,useEffect,useRef } from 'react';\r\nimport './index.css'\r\n\r\n\r\nfunction Mergesort(){\r\n    var [time,settime]=useState(20);\r\n    var [state,setstate]=useState('Unset');\r\n    var inputRef=array;\r\n    inputRef[0] = useRef()\r\n    inputRef[1] = useRef()\r\n    inputRef[2] = useRef()\r\n    inputRef[3] = useRef()\r\n    inputRef[4] = useRef()\r\n    inputRef[5] = useRef()\r\n    var [Darray,setArray]=useState([{\r\n        id:0,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:1,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:2,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:3,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:4,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:5,\r\n        data:0,\r\n        bgclr:'white',\r\n    }]);\r\n\r\n    \r\n    function setval(id,val,clr){\r\n        setArray((preValue)=>{\r\n            if(id===0){\r\n            return [\r\n                    {data:val,bgclr:clr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===1){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:val,bgclr:clr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===2){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:val,bgclr:clr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===3){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:val,bgclr:clr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n\r\n            }\r\n            else if(id===4){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:val,bgclr:clr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===5){\r\n            return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:val,bgclr:clr,id:preValue[5].id}\r\n                ]\r\n            }\r\n        })\r\n    }\r\n    function sleep(ms){\r\n        return new Promise(resolve=>setTimeout(resolve,ms));\r\n    }    \r\n    return(\r\n        <div>\r\n            <div className='container'>\r\n                <div><p className='text-secondary' style={{float:'left'}}>{state}</p><h1 style={{float:'inherit',textAlign:'center'}} className=''>Merge Sort<small className='font-weight-normal font-size-small' style={{float:'right',fontSize:\"16px\",fontWeight:'normal'}}>\r\n                    Speed: <select id=\"std\" onChange={(event)=>\r\n                {   var x=document.getElementById('std').value;\r\n                    settime(x);\r\n                    }}>\r\n<option id=\"ov1\"  value=\"20\" >0 sec</option>\r\n<option id=\"ov2\"  value=\"500\" >0.5 sec</option>\r\n<option id=\"ov3\"  value=\"1000\">1 sec</option>\r\n<option id=\"ov4\"  value=\"1500\">1.5 sec</option>\r\n<option id=\"ov5\"  value=\"2000\">2 sec</option>\r\n<option  id=\"ov6\" value=\"4000\">4 sec</option>\r\n</select></small></h1></div>\r\n                \r\n            </div>\r\n            <br/><br/><br/>\r\n            <div className='container'>\r\n                <div className='grid'>\r\n                    <div className=\"row\">\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                        {Darray.map((value,index)=>{\r\n                            return (<div key={value.id} className='col'>\r\n                            <h1 className='rounded-circle text-center border border-secondary' \r\n                            ref={inputRef[value.id]}\r\n                            style={{backgroundColor:value.bgclr,position:'relative',width:'75px'}}>{value.data}</h1>\r\n                            </div>);})\r\n                        }\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                    </div><br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\"></div>\r\n                        {/* <Resetbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='reset' disabled={false} className='btn btn-outline-secondary' onClick={async()=>{\r\n                            setstate('Setting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[];\r\n                            var i=0;\r\n                            var id=setInterval(func,150);\r\n                            function func(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                da[i]=(Math.floor((Math.random()*100)+1));\r\n                                setval(i,da[i],\"lightgrey\");\r\n                                i++;\r\n                            }\r\n                            setstate('Ready');\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }>reset</button>\r\n                    </div>\r\n                        {/* <Startbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='start' className='btn btn-outline-primary' onClick={async()=>{\r\n                            setstate('Sorting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[Darray[0].data,Darray[1].data,Darray[2].data,Darray[3].data,Darray[4].data,Darray[5].data];\r\n                            var id=setInterval(func1,150);\r\n                            var i=0;\r\n                                function func1(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                setval(i,da[i],\"lightblue\");\r\n                                i++;\r\n                                return\r\n                            }\r\n                            await sleep(time);\r\n                                var temp=[];\r\n                                var n=da.length;\r\n                                for  (var groupLen=1;groupLen<n;groupLen=groupLen<<1)\t\r\n                                {\t\r\n                                    \t\r\n                                    var resCount=0;//The subscript of the temp array. The location where each merging result is stored in temp \t\t\r\n                                    var groupCount=Math.ceil(n*1.0/groupLen); //Number of groups, if less than one group, one group \t\t\r\n                                    var mergeCount=groupCount>>1;//The number of merging was once in two groups. Single group does not merge. \t\t\t\r\n                                    //The second step is to merge the two groups.\t\t\r\n                                    \r\n                                    for (var i = 0;i<mergeCount;i++)\t\t\r\n                                    {\r\n                                        \r\n                                        await sleep(time);\r\n                                    \t\t\r\n                                        var left = (i*groupLen)<<1; //Start position of left group \t\t\t\r\n                                        var leftSide=left+groupLen; //The end of the left group.\t\t\t\r\n                                        var right=leftSide;  //Start position of right group \t\t\t\r\n                                        var rightSide=(n<right+groupLen)?n:right+groupLen; \t//The end of the right group.\t\t\t\t\t\t\r\n                                        //Merge two arrays. Merging can encapsulate an inline function without affecting performance. This is the benefit of non recursion. Recursion cannot inline. \t\t\t\r\n                                        // for(var z=0;z<groupLen;z++)\r\n                                        while (left<leftSide&&right<rightSide) \t\t\t\r\n                                        {\t//Merge: put the smaller one of the two group headers into a temporary array.\t\t\t\t\t\r\n                                            setTimeout(func0(),time);\r\n                                            function func0(){\r\n                                                setval(left,da[left],\"orange\");\r\n                                                return\r\n                                            }\r\n                                            setTimeout(func1(),time);\r\n                                            function func1(){\r\n                                                setval(right,da[right],\"blue\");\r\n                                                return\r\n                                            }\r\n                                            if(da[left]<=da[right]){ //If you use da [left] < da [right], it is unstable.\t\t\t\t\t\t\r\n                                                left++;\r\n                                            }\t\t\t\t\t\t\r\n                                            else{\r\n                                                right++;\r\n                                            }\r\n                                        }\r\n                                            \t\t\r\n                                        while (left<leftSide){ //The rest of the left group is copied to the temporary array \t\t\t\t\t\r\n                                            setTimeout(func3(),time);\r\n                                            function func3(){\r\n                                                setval(left,da[left],\"orange\");\r\n                                                return\r\n                                            }\r\n                                            left++;\r\n                                        }\r\n                                        while (right<rightSide){ //Copy the rest of the right group to the temporary array \t\t\t\t\r\n                                            setTimeout(func4(),time);\r\n                                            function func4(){\r\n                                                setval(right,da[right],\"blue\");\r\n                                                return\r\n                                            }\r\n                                            await sleep(time);\r\n                                            right++;\r\n                                            // temp[resCount++]=da[right++];\r\n                                        }\r\n\r\n\r\n                                        \r\n                                        while (left<leftSide&&right<rightSide) \t\t\t\r\n                                        {\t//Merge: put the smaller one of the two group headers into a temporary array.\t\t\t\t\t\r\n                                            // await sleep(time);\r\n                                            setTimeout(func0(),time);\r\n                                            function func0(){\r\n                                                setval(left,da[left],\"orange\");\r\n                                                return\r\n                                            }\r\n                                            \r\n                                    //    await sleep(time);\r\n                                            // await sleep(time);\r\n                                            setTimeout(func1(),time);\r\n                                            function func1(){\r\n                                                setval(right,da[right],\"blue\");\r\n                                                return\r\n                                            }\r\n                                            inputRef[left].current.style.opacity=0;\r\n    \r\n                                            inputRef[right].current.style.opacity=0;\r\n                                            if(da[left]<=da[right]){ //If you use da [left] < da [right], it is unstable.\t\t\t\t\t\t\r\n                                                temp[resCount]=da[left];\r\n                                                left++;\r\n                                            }\t\t\t\t\t\t\r\n                                            else{\r\n                                                temp[resCount]=da[right];\t\t\t\t\r\n                                                // await sleep(time);\r\n                                                // setTimeout(func1(),time);\r\n                                                // function func1(){\r\n                                                //     setval(right,temp[right],\"blue\");\r\n                                                //     return\r\n                                                // }\r\n                                                right++;\r\n                                            }\r\n                                            // await sleep(time);\r\n                                            // setTimeout(func2(),time);\r\n                                            // function func2(){\r\n                                            //     setval(resCount,temp[resCount],\"lightblue\");\r\n                                            //     return\r\n                                            // }\r\n                                            resCount++;\r\n                                            \r\n                                        }\r\n                                            \t\t\r\n                                        while (left<leftSide){ //The rest of the left group is copied to the temporary array \t\t\t\t\t\r\n                                            // await sleep(time);\r\n                                            setTimeout(func3(),time);\r\n                                            function func3(){\r\n                                                setval(left,da[left],\"orange\");\r\n                                                return\r\n                                            }\r\n                                            // await sleep(time);\r\n                                            temp[resCount++]=da[left++];\r\n                                        }\r\n                                        while (right<rightSide){ //Copy the rest of the right group to the temporary array \t\t\t\t\r\n                                            // await sleep(time);\r\n                                            setTimeout(func4(),time);\r\n                                            function func4(){\r\n                                                setval(right,da[right],\"blue\");\r\n                                                return\r\n                                            }\r\n                                            await sleep(time);\r\n                                            temp[resCount++]=da[right++];\r\n                                        }\t\t    \r\n                                        for (left = i<<1; left < rightSide;left++){ //Copy the merging result data of the temporary array back to the original array. \t\t        \r\n                                        await sleep(time);\r\n                                        // inputRef[right].current.animate([\r\n                                        //     {opacity:0},\r\n                                        //     // {transform:'rotate(180deg)'},\r\n                                        //     {opacity:1},\r\n                                        //     // {transform:'rotate(180deg,360deg)'},\r\n                                        //     // {opacity:1}\r\n                                        // ],\r\n                                        // {duration:1000\r\n                                        // });\r\n                                        // inputRef[right].current.style.opacity=1;\r\n                                    // setTimeout(func4(),time);\r\n                                        function func4(){\r\n                                            setval(left,da[left],\"blue\");\r\n                                            return\r\n                                        }\r\n                                        // await sleep(time);\r\n                                        // setTimeout(func5(),time);\r\n                                        // function func5(){\r\n                                        //     setval(left,temp[left],\"blue\");\r\n                                        //     return\r\n                                        // }\r\n \r\n                                        da[left] = temp[left];\r\n                                        \r\n\r\n                                        // await sleep(time);\r\n                                        setTimeout(func6(),time);\r\n                                        function func6(){\r\n                                            setval(left,da[left],\"lightblue\");\r\n                                            return\r\n                                        }\r\n                                        // await sleep(time);\r\n                                        // setTimeout(func7(),time);\r\n                                        // function func7(){\r\n                                        //     setval(left,temp[left],\"lightblue\");\r\n                                        //     return\r\n                                        // }\r\n                                        inputRef[left].current.animate([\r\n                                            {opacity:0},\r\n                                            // {transform:'rotate(180deg)'},\r\n                                            {opacity:1},\r\n                                            // {transform:'rotate(180deg,360deg)'},\r\n                                            // {opacity:1}\r\n                                        ],\r\n                                        {duration:1000\r\n                                        });\r\n                                        inputRef[left].current.style.opacity=1;\r\n\r\n                                        }\r\n                                        console.log(da);    \t\r\n                                        \r\n                                    }\r\n                                }\r\n                            // document.write(da);                            \r\n                            setstate('Sorted!!')\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }\r\n                    >start</button>\r\n                    </div>\r\n                        {/* <Reloadbtn/> */}\r\n                        <div className=\"col-4\">\r\n                        <button id='reload' className='btn btn-outline-warning' onClick={()=>{\r\n                            window.location.reload();\r\n                            }}>reload</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='footer'>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Mergesort; "]},"metadata":{},"sourceType":"module"}