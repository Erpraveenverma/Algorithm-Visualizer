{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\react\\\\sortingvisualiser\\\\src\\\\About.jsx\";\nimport React from 'react';\nimport bubble from './bubble.PNG';\nimport reset from './reset.png';\nimport start from './start.png';\nimport reload from './reload.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst About = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"ALGORITHM VISUALIZATION PLATFORM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"In addition to the mathematical and empirical analyses of algorithms, there is yet a third way to study algorithms. It is called algorithm visualization and can be defined as the use of images to convey some useful information about algorithms. That information can be a visual illustration of an algorithm\\u2019s operation, of its performance on different kinds of inputs, or of its execution speed versus that of other algorithms for the same problem. To accomplish this goal, an algorithm visualization uses graphic elements points, two-dimensional data-circles, and so on to represent some \\u201Cinteresting events\\u201D in the algorithm\\u2019s operation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"How to use\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The following is the window you will see when you use algorithm visualization platform to visualize algorithms. This window consists of six data circles initially all set to zero, and it consists of three buttons i.e. reset, start, reload.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: bubble,\n      Style: \"height:275px; width:500px;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Following image shows the reset button, clicking on this reset button will set the data-circles to different random numbers. Each time you click on reset button six data-circles will be set to new random values.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: reset,\n      Style: \"height:275px; width:500px;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Following image shows the start button, clicking on this start button will start to visualizing different algorithms using an interactive animation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: start,\n      Style: \"height:275px; width:500px;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Following image shows the reload button, clicking on this reload button will reload the entire page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: reload,\n      Style: \"height:275px; width:500px;\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true);\n};\n\n_c = About;\nexport default About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["F:/web/react/sortingvisualiser/src/About.jsx"],"names":["React","bubble","reset","start","reload","About"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AACA,MAAMC,KAAK,GAAC,MAAI;AAAC,sBACb;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,uBAqBU;AAAK,MAAA,GAAG,EAAEJ,MAAV;AAAkB,MAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YArBV,eAsBI;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAsBS;AAAA;AAAA;AAAA;AAAA,YAtBT,eAsBc;AAAA;AAAA;AAAA;AAAA,YAtBd,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBJ,uBA2BU;AAAK,MAAA,GAAG,EAAEC,KAAV;AAAiB,MAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YA3BV,eA4BI;AAAA;AAAA;AAAA;AAAA,YA5BJ,eA4BS;AAAA;AAAA;AAAA;AAAA,YA5BT,eA4Bc;AAAA;AAAA;AAAA;AAAA,YA5Bd,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BJ,uBAgCU;AAAK,MAAA,GAAG,EAAEC,KAAV;AAAiB,MAAA,KAAK,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAhCV,eAiCI;AAAA;AAAA;AAAA;AAAA,YAjCJ,eAiCS;AAAA;AAAA;AAAA;AAAA,YAjCT,eAiCc;AAAA;AAAA;AAAA;AAAA,YAjCd,eAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCJ,uBAqCU;AAAK,MAAA,GAAG,EAAEC,MAAV;AAAkB,MAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,YArCV,eAsCI;AAAA;AAAA;AAAA;AAAA,YAtCJ,eAsCS;AAAA;AAAA;AAAA;AAAA,YAtCT,eAsCc;AAAA;AAAA;AAAA;AAAA,YAtCd;AAAA,kBADa;AA0Cd,CA1CH;;KAAMC,K;AA2CN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport bubble from './bubble.PNG'\r\nimport reset from './reset.png'\r\nimport start from './start.png'\r\nimport reload from './reload.png'\r\nconst About=()=>{return(\r\n    <>\r\n        <h3>ALGORITHM VISUALIZATION PLATFORM</h3>\r\n        <p>\r\n            In addition to the mathematical and empirical \r\n           analyses of algorithms, there is yet a third \r\n           way to study algorithms. It is called algorithm \r\n           visualization and can be defined as the use of \r\n           images to convey some useful information about \r\n           algorithms. That information can be a visual illustration \r\n           of an algorithm’s operation, of its performance on different \r\n           kinds of inputs, or of its execution speed versus that of \r\n           other algorithms for the same problem. To accomplish this \r\n           goal, an algorithm visualization uses graphic elements points, \r\n           two-dimensional data-circles, and so on to represent some \r\n           “interesting events” in the algorithm’s operation.\r\n        </p>\r\n        <h3>How to use</h3>\r\n        <p>The following is the window you will see when you use algorithm \r\n            visualization platform to visualize algorithms. This window consists of \r\n            six data circles initially all set to zero, and it consists of three buttons i.e. reset, start, reload.\r\n        </p>\r\n        &nbsp;<img src={bubble} Style='height:275px; width:500px;'/>\r\n        <br/><br/><br/>\r\n        <p>Following image shows the reset button, clicking on this reset button will \r\n            set the data-circles to different random numbers. Each time you click on \r\n            reset button six data-circles will be set to new random values. \r\n        </p>\r\n        &nbsp;<img src={reset} Style='height:275px; width:500px;'/>\r\n        <br/><br/><br/>\r\n        <p>Following image shows the start button, clicking on this start button will \r\n            start to visualizing different algorithms using an interactive animation. \r\n        </p>\r\n        &nbsp;<img src={start} Style='height:275px; width:500px;'/>\r\n        <br/><br/><br/>\r\n        <p>Following image shows the reload button, clicking on this reload button will \r\n            reload the entire page. \r\n        </p>\r\n        &nbsp;<img src={reload} Style='height:275px; width:500px;'/>\r\n        <br/><br/><br/>\r\n\r\n    </>\r\n);}\r\nexport default About;"]},"metadata":{},"sourceType":"module"}