{"ast":null,"code":"var _jsxFileName = \"F:\\\\web\\\\react\\\\sortingvisualiser\\\\src\\\\Mergesort.jsx\",\n    _s = $RefreshSig$();\n\nimport { array } from 'prop-types';\nimport React, { useState, useEffect, useRef } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Mergesort() {\n  _s();\n\n  var [time, settime] = useState(20);\n  var [state, setstate] = useState('Unset');\n  var inputRef = array;\n  inputRef[0] = useRef();\n  inputRef[1] = useRef();\n  inputRef[2] = useRef();\n  inputRef[3] = useRef();\n  inputRef[4] = useRef();\n  inputRef[5] = useRef();\n  var [Darray, setArray] = useState([{\n    id: 0,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 1,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 2,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 3,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 4,\n    data: 0,\n    bgclr: 'white'\n  }, {\n    id: 5,\n    data: 0,\n    bgclr: 'white'\n  }]);\n\n  function setval(id, val, clr) {\n    setArray(preValue => {\n      if (id === 0) {\n        return [{\n          data: val,\n          bgclr: clr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 1) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 2) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 3) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 4) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[4].id\n        }, {\n          data: preValue[5].data,\n          bgclr: preValue[5].bgclr,\n          id: preValue[5].id\n        }];\n      } else if (id === 5) {\n        return [{\n          data: preValue[0].data,\n          bgclr: preValue[0].bgclr,\n          id: preValue[0].id\n        }, {\n          data: preValue[1].data,\n          bgclr: preValue[1].bgclr,\n          id: preValue[1].id\n        }, {\n          data: preValue[2].data,\n          bgclr: preValue[2].bgclr,\n          id: preValue[2].id\n        }, {\n          data: preValue[3].data,\n          bgclr: preValue[3].bgclr,\n          id: preValue[3].id\n        }, {\n          data: preValue[4].data,\n          bgclr: preValue[4].bgclr,\n          id: preValue[4].id\n        }, {\n          data: val,\n          bgclr: clr,\n          id: preValue[5].id\n        }];\n      }\n    });\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-secondary\",\n          style: {\n            float: 'left'\n          },\n          children: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            float: 'inherit',\n            textAlign: 'center'\n          },\n          className: \"\",\n          children: [\"Merge Sort\", /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"font-weight-normal font-size-small\",\n            style: {\n              float: 'right',\n              fontSize: \"16px\",\n              fontWeight: 'normal'\n            },\n            children: [\"Speed: \", /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"std\",\n              onChange: event => {\n                var x = document.getElementById('std').value;\n                settime(x);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov1\",\n                value: \"20\",\n                children: \"0 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov2\",\n                value: \"500\",\n                children: \"0.5 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov3\",\n                value: \"1000\",\n                children: \"1 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov4\",\n                value: \"1500\",\n                children: \"1.5 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov5\",\n                value: \"2000\",\n                children: \"2 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                id: \"ov6\",\n                value: \"4000\",\n                children: \"4 sec\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 158\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 86\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"grid-item\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), Darray.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"rounded-circle text-center border border-secondary\",\n                ref: inputRef[value.id],\n                style: {\n                  backgroundColor: value.bgclr,\n                  position: 'relative',\n                  width: '75px'\n                },\n                children: value.data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 29\n              }, this)\n            }, value.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"grid-item\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"reset\",\n              disabled: false,\n              className: \"btn btn-outline-secondary\",\n              onClick: async () => {\n                setstate('Setting...');\n                document.getElementById('reset').disabled = true;\n                document.getElementById('start').disabled = true;\n                document.getElementById('reload').disabled = true;\n                document.getElementById('std').disabled = true;\n                var da = [];\n                var i = 0;\n                var id = setInterval(func, 150);\n\n                function func() {\n                  if (i > 4) {\n                    clearInterval(id);\n                  }\n\n                  da[i] = Math.floor(Math.random() * 100 + 1);\n                  setval(i, da[i], \"lightgrey\");\n                  i++;\n                }\n\n                setstate('Ready');\n                document.getElementById('reset').disabled = false;\n                document.getElementById('start').disabled = false;\n                document.getElementById('reload').disabled = false;\n                document.getElementById('std').disabled = false;\n              },\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"start\",\n              className: \"btn btn-outline-primary\",\n              onClick: async () => {\n                setstate('Sorting...');\n                document.getElementById('reset').disabled = true;\n                document.getElementById('start').disabled = true;\n                document.getElementById('reload').disabled = true;\n                document.getElementById('std').disabled = true;\n                var arr = [Darray[0].data, Darray[1].data, Darray[2].data, Darray[3].data, Darray[4].data, Darray[5].data];\n                var i = 0;\n                var id = setInterval(func1, 150);\n\n                function func1() {\n                  if (i > 4) {\n                    clearInterval(id);\n                  }\n\n                  setval(i, arr[i], \"lightblue\");\n                  i++;\n                  return;\n                } // var k=0;\n                // while(k<da.length){\n                //     let temp=0;\n                //     var j=1;\n                //     while(j<da.length-k){\n                //         await sleep(time);\n                //         await sleep(time);\n                //         setTimeout(func0(),time);\n                //             function func0(){\n                //                 setval(j-1,da[j-1],\"royalblue\");\n                //                 return\n                //             }\n                //         setTimeout(func01(),time);\n                //             function func01(){\n                //                     setval(j,da[j],\"royalblue\");\n                //                     return        \n                //             }\n                //         if(da[j-1]>da[j]) {\n                //             temp=da[j-1];\n                //             setTimeout(func2(),time);\n                //             function func2(){\n                //                 setval(j-1,da[j-1],\"Coral\");\n                //                 da[j-1]=da[j];\n                //                 return\n                //             }\n                //             inputRef[j-1].current.animate([\n                //                 {transform:'translateX(0px)'},\n                //                 {transform:'translateX(+100px) rotate(360deg)'}\n                //             ],\n                //             {duration:1000\n                //             });\n                //             setTimeout(func3(),time);\n                //             function func3(){\n                //                     setval(j,da[j],\"Coral\");\n                //                     da[j]=temp;\n                //                     return  \n                //             }\n                //             inputRef[j].current.animate([\n                //                 {transform:'translateX(0px)'},\n                //                 {transform:'translateY(-80px)'},\n                //                 {transform:'translateX(-100px) rotate(360deg)'}\n                //             ],\n                //             {duration:1000\n                //             });\n                //         }\n                //         setTimeout(setval,1000,j-1,da[j-1],\"lightblue\");\n                //         setTimeout(setval,1000,j,da[j],\"lightgreen\");\n                //         j++;\n                //     }\n                //     k++;\n                // }\n\n\n                var arr_size = arr.length;\n                mergeSort(arr, 0, arr_size - 1);\n\n                function merge(arr, l, m, r) {\n                  var n1 = m - l + 1;\n                  var n2 = r - m; // Create temp arrays\n\n                  var L = new Array(n1);\n                  var R = new Array(n2); // Copy data to temp arrays L[] and R[]\n\n                  for (var i = 0; i < n1; i++) {\n                    L[i] = arr[l + i];\n                    setTimeout(func2(), time);\n\n                    function func2() {\n                      setval(i, arr[i], \"Coral\");\n                      return;\n                    } // await sleep(time);\n\n                  }\n\n                  for (var j = 0; j < n2; j++) {\n                    R[j] = arr[m + 1 + j];\n                  } // Merge the temp arrays back into arr[l..r]\n                  // Initial index of first subarray\n\n\n                  var i = 0; // Initial index of second subarray\n\n                  var j = 0; // Initial index of merged subarray\n\n                  var k = l;\n\n                  while (i < n1 && j < n2) {\n                    if (L[i] <= R[j]) {\n                      arr[k] = L[i];\n                      i++;\n                    } else {\n                      arr[k] = R[j];\n                      j++;\n                    }\n\n                    k++;\n                  } // Copy the remaining elements of\n                  // L[], if there are any\n\n\n                  while (i < n1) {\n                    arr[k] = L[i];\n                    i++;\n                    k++;\n                  } // Copy the remaining elements of\n                  // R[], if there are any\n\n\n                  while (j < n2) {\n                    arr[k] = R[j];\n                    j++;\n                    k++;\n                  }\n                } // l is for left index and r is\n                // right index of the sub-array\n                // of arr to be sorted */\n\n\n                function mergeSort(arr, l, r) {\n                  if (l >= r) {\n                    return; //returns recursively\n                  }\n\n                  var m = l + parseInt((r - l) / 2);\n                  mergeSort(arr, l, m);\n                  mergeSort(arr, m + 1, r);\n                  merge(arr, l, m, r);\n                } // UTILITY FUNCTIONS\n                // Function to print an array\n\n\n                function printArray(A, size) {\n                  for (var i = 0; i < size; i++) document.write(A[i] + \" \");\n                } // var arr = [ 12, 11, 13, 5, 6, 7 ];\n                // document.write(  \"Given array is <br>\");\n                // printArray(arr, arr_size);\n                // document.write( \"<br>Sorted array is <br>\");\n                // printArray(arr, arr_size);\n                // setTimeout(setval,1000,0,da[0],\"lightgreen\");\n\n\n                setstate('Sorted!!');\n                document.getElementById('reset').disabled = false;\n                document.getElementById('start').disabled = false;\n                document.getElementById('reload').disabled = false;\n                document.getElementById('std').disabled = false;\n              },\n              children: \"start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"reload\",\n              className: \"btn btn-outline-warning\",\n              onClick: () => {\n                window.location.reload();\n              },\n              children: \"reload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Mergesort, \"PTuzwd8QebY2Vs2vNZKuKi+LjJY=\");\n\n_c = Mergesort;\nexport default Mergesort;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mergesort\");","map":{"version":3,"sources":["F:/web/react/sortingvisualiser/src/Mergesort.jsx"],"names":["array","React","useState","useEffect","useRef","Mergesort","time","settime","state","setstate","inputRef","Darray","setArray","id","data","bgclr","setval","val","clr","preValue","sleep","ms","Promise","resolve","setTimeout","float","textAlign","fontSize","fontWeight","event","x","document","getElementById","value","map","index","backgroundColor","position","width","disabled","da","i","setInterval","func","clearInterval","Math","floor","random","arr","func1","arr_size","length","mergeSort","merge","l","m","r","n1","n2","L","Array","R","func2","j","k","parseInt","printArray","A","size","write","window","location","reload"],"mappings":"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","sourcesContent":["import { array } from 'prop-types';\r\nimport React, {useState,useEffect,useRef } from 'react';\r\nimport './index.css'\r\n\r\n\r\nfunction Mergesort(){\r\n    var [time,settime]=useState(20);\r\n    var [state,setstate]=useState('Unset');\r\n    var inputRef=array;\r\n    inputRef[0] = useRef()\r\n    inputRef[1] = useRef()\r\n    inputRef[2] = useRef()\r\n    inputRef[3] = useRef()\r\n    inputRef[4] = useRef()\r\n    inputRef[5] = useRef()\r\n    var [Darray,setArray]=useState([{\r\n        id:0,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:1,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:2,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:3,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:4,\r\n        data:0,\r\n        bgclr:'white',\r\n    },\r\n    {\r\n        id:5,\r\n        data:0,\r\n        bgclr:'white',\r\n    }]);\r\n\r\n    \r\n    function setval(id,val,clr){\r\n        setArray((preValue)=>{\r\n            if(id===0){\r\n            return [\r\n                    {data:val,bgclr:clr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===1){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:val,bgclr:clr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===2){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:val,bgclr:clr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===3){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:val,bgclr:clr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n\r\n            }\r\n            else if(id===4){\r\n                return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:val,bgclr:clr,id:preValue[4].id},\r\n                    {data:preValue[5].data,bgclr:preValue[5].bgclr,id:preValue[5].id}\r\n                ]\r\n            }\r\n            else if(id===5){\r\n            return [\r\n                    {data:preValue[0].data,bgclr:preValue[0].bgclr,id:preValue[0].id},\r\n                    {data:preValue[1].data,bgclr:preValue[1].bgclr,id:preValue[1].id},\r\n                    {data:preValue[2].data,bgclr:preValue[2].bgclr,id:preValue[2].id},\r\n                    {data:preValue[3].data,bgclr:preValue[3].bgclr,id:preValue[3].id},\r\n                    {data:preValue[4].data,bgclr:preValue[4].bgclr,id:preValue[4].id},\r\n                    {data:val,bgclr:clr,id:preValue[5].id}\r\n                ]\r\n            }\r\n        })\r\n    }\r\n    function sleep(ms){\r\n        return new Promise(resolve=>setTimeout(resolve,ms));\r\n    }    \r\n    return(\r\n        <div>\r\n            <div className='container'>\r\n                <div><p className='text-secondary' style={{float:'left'}}>{state}</p><h1 style={{float:'inherit',textAlign:'center'}} className=''>Merge Sort<small className='font-weight-normal font-size-small' style={{float:'right',fontSize:\"16px\",fontWeight:'normal'}}>\r\n                    Speed: <select id=\"std\" onChange={(event)=>\r\n                {   var x=document.getElementById('std').value;\r\n                    settime(x);\r\n                    }}>\r\n<option id=\"ov1\"  value=\"20\" >0 sec</option>\r\n<option id=\"ov2\"  value=\"500\" >0.5 sec</option>\r\n<option id=\"ov3\"  value=\"1000\">1 sec</option>\r\n<option id=\"ov4\"  value=\"1500\">1.5 sec</option>\r\n<option id=\"ov5\"  value=\"2000\">2 sec</option>\r\n<option  id=\"ov6\" value=\"4000\">4 sec</option>\r\n</select></small></h1></div>\r\n                \r\n            </div>\r\n            <br/><br/><br/>\r\n            <div className='container'>\r\n                <div className='grid'>\r\n                    <div className=\"row\">\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                        {Darray.map((value,index)=>{\r\n                            return (<div key={value.id} className='col'>\r\n                            <h1 className='rounded-circle text-center border border-secondary' \r\n                            ref={inputRef[value.id]}\r\n                            style={{backgroundColor:value.bgclr,position:'relative',width:'75px'}}>{value.data}</h1>\r\n                            </div>);})\r\n                        }\r\n                        <div className='col'>\r\n                            <h1 className='grid-item'> </h1>\r\n                        </div>\r\n                    </div><br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\"></div>\r\n                        {/* <Resetbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='reset' disabled={false} className='btn btn-outline-secondary' onClick={async()=>{\r\n                            setstate('Setting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var da=[];\r\n                            var i=0;\r\n                            var id=setInterval(func,150);\r\n                            function func(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                da[i]=(Math.floor((Math.random()*100)+1));\r\n                                setval(i,da[i],\"lightgrey\");\r\n                                i++;\r\n                            }\r\n                            setstate('Ready');\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }>reset</button>\r\n                    </div>\r\n                        {/* <Startbtn/> */}\r\n                        <div className=\"col\">\r\n                        <button id='start' className='btn btn-outline-primary' onClick={async()=>{\r\n                            setstate('Sorting...');\r\n                            document.getElementById('reset').disabled=true;\r\n                            document.getElementById('start').disabled=true;\r\n                            document.getElementById('reload').disabled=true;\r\n                            document.getElementById('std').disabled=true;\r\n                            var arr=[Darray[0].data,Darray[1].data,Darray[2].data,Darray[3].data,Darray[4].data,Darray[5].data];\r\n                            var i=0;\r\n                            var id=setInterval(func1,150);\r\n                            function func1(){\r\n                                if(i>4){\r\n                                    clearInterval(id);\r\n                                }\r\n                                setval(i,arr[i],\"lightblue\");\r\n                                i++;\r\n                                return\r\n                            }\r\n                            // var k=0;\r\n                            // while(k<da.length){\r\n                            //     let temp=0;\r\n                            //     var j=1;\r\n                            //     while(j<da.length-k){\r\n                            //         await sleep(time);\r\n                            //         await sleep(time);\r\n                            //         setTimeout(func0(),time);\r\n                            //             function func0(){\r\n                            //                 setval(j-1,da[j-1],\"royalblue\");\r\n                            //                 return\r\n                            //             }\r\n                            //         setTimeout(func01(),time);\r\n                            //             function func01(){\r\n                            //                     setval(j,da[j],\"royalblue\");\r\n                            //                     return        \r\n                            //             }\r\n                            //         if(da[j-1]>da[j]) {\r\n                            //             temp=da[j-1];\r\n                            //             setTimeout(func2(),time);\r\n                            //             function func2(){\r\n                                            \r\n                            //                 setval(j-1,da[j-1],\"Coral\");\r\n                                            \r\n                            //                 da[j-1]=da[j];\r\n                                            \r\n                            //                 return\r\n                            //             }\r\n                            //             inputRef[j-1].current.animate([\r\n                            //                 {transform:'translateX(0px)'},\r\n                            //                 {transform:'translateX(+100px) rotate(360deg)'}\r\n                            //             ],\r\n                            //             {duration:1000\r\n                            //             });\r\n                            //             setTimeout(func3(),time);\r\n                            //             function func3(){\r\n                                                \r\n                            //                     setval(j,da[j],\"Coral\");\r\n                            //                     da[j]=temp;\r\n                                                \r\n                                                \r\n                            //                     return  \r\n                            //             }\r\n                            //             inputRef[j].current.animate([\r\n                            //                 {transform:'translateX(0px)'},\r\n                            //                 {transform:'translateY(-80px)'},\r\n                            //                 {transform:'translateX(-100px) rotate(360deg)'}\r\n                            //             ],\r\n                            //             {duration:1000\r\n                            //             });\r\n                                        \r\n                            //         }\r\n                            //         setTimeout(setval,1000,j-1,da[j-1],\"lightblue\");\r\n                            //         setTimeout(setval,1000,j,da[j],\"lightgreen\");\r\n                                        \r\n                            //         j++;\r\n                                    \r\n                            //     }\r\n                            //     k++;\r\n                            // }\r\n                            var arr_size = arr.length;\r\n                            mergeSort(arr, 0, arr_size - 1);\r\n                            function merge(arr, l, m, r)\r\n                            {\r\n                                var n1 = m - l + 1;\r\n                                var n2 = r - m;\r\n                            \r\n                                // Create temp arrays\r\n                                var L = new Array(n1);\r\n                                var R = new Array(n2);\r\n                            \r\n                                // Copy data to temp arrays L[] and R[]\r\n                                for (var i = 0; i < n1; i++){\r\n                                    L[i] = arr[l + i];\r\n                                    setTimeout(func2(),time);\r\n                                    function func2(){\r\n                                        setval(i,arr[i],\"Coral\");\r\n                                        return        \r\n                                    }\r\n                                    // await sleep(time);\r\n                                }\r\n                                for (var j = 0; j < n2; j++){\r\n                                    R[j] = arr[m + 1 + j];\r\n                                }\r\n                                // Merge the temp arrays back into arr[l..r]\r\n                            \r\n                                // Initial index of first subarray\r\n                                var i = 0;\r\n                            \r\n                                // Initial index of second subarray\r\n                                var j = 0;\r\n                            \r\n                                // Initial index of merged subarray\r\n                                var k = l;\r\n                            \r\n                                while (i < n1 && j < n2) {\r\n                                    if (L[i] <= R[j]) {\r\n                                        arr[k] = L[i];\r\n                                        i++;\r\n                                    }\r\n                                    else {\r\n                                        arr[k] = R[j];\r\n                                        j++;\r\n                                    }\r\n                                    k++;\r\n                                }\r\n                            \r\n                                // Copy the remaining elements of\r\n                                // L[], if there are any\r\n                                while (i < n1) {\r\n                                    arr[k] = L[i];\r\n                                    i++;\r\n                                    k++;\r\n                                }\r\n                            \r\n                                // Copy the remaining elements of\r\n                                // R[], if there are any\r\n                                while (j < n2) {\r\n                                    arr[k] = R[j];\r\n                                    j++;\r\n                                    k++;\r\n                                }\r\n                            }\r\n                            \r\n                            // l is for left index and r is\r\n                            // right index of the sub-array\r\n                            // of arr to be sorted */\r\n                            function mergeSort(arr,l, r){\r\n                                if(l>=r){\r\n                                    return;//returns recursively\r\n                                }\r\n                                var m =l+ parseInt((r-l)/2);\r\n                                mergeSort(arr,l,m);\r\n                                mergeSort(arr,m+1,r);\r\n                                merge(arr,l,m,r);\r\n                            }\r\n                            \r\n                            // UTILITY FUNCTIONS\r\n                            // Function to print an array\r\n                            function printArray( A, size)\r\n                            {\r\n                                for (var i = 0; i < size; i++)\r\n                                document.write(  A[i] + \" \");\r\n                            }\r\n                            \r\n                            \r\n                            // var arr = [ 12, 11, 13, 5, 6, 7 ];\r\n                            \r\n                                // document.write(  \"Given array is <br>\");\r\n                                // printArray(arr, arr_size);\r\n                            \r\n                            \r\n                                // document.write( \"<br>Sorted array is <br>\");\r\n                                // printArray(arr, arr_size);\r\n                            // setTimeout(setval,1000,0,da[0],\"lightgreen\");\r\n                            setstate('Sorted!!')\r\n                            document.getElementById('reset').disabled=false;\r\n                            document.getElementById('start').disabled=false;\r\n                            document.getElementById('reload').disabled=false;\r\n                            document.getElementById('std').disabled=false;\r\n                        }\r\n                    }    \r\n                    >start</button>\r\n                    </div>\r\n                        {/* <Reloadbtn/> */}\r\n                        <div className=\"col-4\">\r\n                        <button id='reload' className='btn btn-outline-warning' onClick={()=>{\r\n                            window.location.reload();\r\n                            }}>reload</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='footer'>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Mergesort; "]},"metadata":{},"sourceType":"module"}